Base Url : localhost:3001
------------------------------------------------------------------
User Section : /api/users
------------------------------------------------------------------
Method : Register
Permission : None
Request Type : POST
Path : /register

require : {
    username : string,
    fullName : string,
    section : string ("cpe" or "ske")
}

response : {
    status code : 200 or 500
    message : created or username does exist or error
    detail {
        userdata or error
    }
}

----------------------------------------------------------------------

USER SECTION : /api/users

Method : Login
Permission : None
Request Type : POST
Path : /login

use basic auth

response : {
    status code : 200 or 500
    message : Login Succeed or Login Failed
    detail {
        userdata or cause of login Failed
    }
}
------------------------------------------------------------------
Method : Get Profile
Permission : User or Admin
Request Type : GET
Path : /profile

require : {
   none
}

response : {
    status code : 200 or 401
    userdata or "unauthorize"
}
------------------------------------------------------------------
Method : Logout
Permission : User or Admin
Request Type : POST
Path : /logout

require : {
   none
}

response : {
    status code : 200 or 401
    "Logout succeed" or "unauthorize"
}
------------------------------------------------------------------
Distribution Section : /api/distributions
------------------------------------------------------------------
Method : Get All Distribution 
Permission : Admin
Request Type : GET
Path : /

require : {
   none
}

response : {
    status code : 200 or 500
    message : Find All Distributions
    detail {[
        name : String,
        parameters : [{
            name : String,
            meaning : String
        }]
    ]}
}
------------------------------------------------------------------
Method : Get Distribution By Name 
Permission : Admin
Request Type : GET
Path : /:Name of Distribution

require : {
   none
}

response : {
    status code : 200 or 500
    message : Find One Distributions
    detail {
        name : String,
        parameters : [{
            name : String,
            meaning : String
        }]
    }
}
------------------------------------------------------------------
Method : Create New Distribution
Permission : Admin
Request Type : POST
Path : /create

require : {
   name : String,
   parameters : [{
       name  : String,
       meaning : String
   }]
}

response : {
    status code : 200 or 500
    message : Created
    detail {
        name : String,
        parameters : [{
            name : String,
            meaning : String
        }]
    }
}
------------------------------------------------------------------
Exercise Section : /api/exercises
------------------------------------------------------------------
Method : Get All Exercise
Permission : User or Admin 
Request Type : GET
Path : /

require : {
  None
}

response : {
    status code : 200 or 500
    message : Find All Exercise
    detail {[{
        title : String,
        name : String,
        description : String,
        section : {
            type : String,
        },
        tasks : [
            task
        ]
        disable : Boolean (Show when you are admin)
    }]}
}
------------------------------------------------------------------
Method : Get Exercise By Id
Permission : User or Admin 
Request Type : GET
Path : /: Id of Exercise

require : {
  None
}

response : {
    status code : 200 or 500
    message : Find All Exercise
    detail {
        title : String,
        name : String,
        description : String,
        section : {
            type : String,
        },
        tasks : [
            task
        ]
        disable : Boolean (Show when you are admin)
    }
}
------------------------------------------------------------------
Method : Create New Exercise
Permission : Admin 
Request Type : POST
Path : /create

require : {
    title : String
    name : String
    description : String
    section : String
    disable : Boolean if it is null or undifined , It set by default
    tasks : [taskid]  not required but you can set it
}

response : {
    status code : 200 or 500
    message : created
    detail {
        title : String,
        name : String,
        description : String,
        section : {
            type : String,
        },
        tasks : [
            taskid
        ]
        disable : Boolean
    }
}
------------------------------------------------------------------
Method : Edit Exercise
Permission : Admin 
Request Type : PUT
Path : /edit/: Id of Exercise

require : {
   Fields which you wanna edit .
   This Method is overwrite .
   If you wanna add new task or remove task .
   please use other Path.
   I will provide that paths in next Medthod.
}

response : {
    status code : 200 or 500
    message : edited
    detail {
        status edit
    }
}
------------------------------------------------------------------
Method : Add Task To Exercise
Permission : Admin 
Request Type : PUT
Path : /addtask/: Id of Exercise

require : {
  tasks : [
      taskid
  ]
}

response : {
    status code : 200 or 500
    message : created
    detail {
        status edit
    }
}
------------------------------------------------------------------
Method : Remove Task in Exercise
Permission : Admin 
Request Type : PUT
Path : /removetask/: Id of Exercise

require : {
  tasks : [
      taskid
  ]
}

response : {
    status code : 200 or 500
    message : edited
    detail {
        status edit
    }
}
------------------------------------------------------------------
Method : DELETE Exercise
Permission : Admin 
Request Type : DELETE
Path : /:Id of Exercise

response : {
    status code : 200 or 500
    message : delete exercise
    detail {
        delete status
    }
}
------------------------------------------------------------------
Task Section : /api/tasks
------------------------------------------------------------------
Method : Get All Tasks
Permission : User or Admin 
Request Type : GET
Path : /

require : {
  None
}

response : {
    status code : 200 or 500
    message : Get All Tasks
    detail {[
        {
            title : String,
            name : String,
            distribution : Object,
            genamount : Number,
            parameters : [{
                name : String,
                value : Number
            }],
            disable : Boolean (Show when you are admin)
        }
    ]}
}
------------------------------------------------------------------
Method : Get Task By Id
Permission : User or Admin 
Request Type : GET
Path : /:id of task

require : {
  None
}

response : {
    status code : 200 or 500
    message : Get One Task
    detail {
            title : String,
            name : String,
            distribution : Object,
            genamount : Number,
            parameters : [{
                name : String,
                value : Number
            }],
            disable : Boolean (Show when you are admin)
    }
}
------------------------------------------------------------------
Method : Create New Task
Permission : Admin 
Request Type : POST
Path : /create

require : {
    title : String,
    name : String,
    distribution : distribution id
    genamount : Number,
    parameters : [{
        name : String,
        value : Number
    }],
    disable : Boolean if it is null or undifined , It set by default
}

response : {
    status code : 200 or 500
    message : create
    detail {
            title : String,
            name : String,
            distribution : 
            genamount : Number,
            parameters : [{
                name : String,
                value : Number
            }],
            disable : Boolean 
    }
}
------------------------------------------------------------------
Method : Edit Task
Permission : Admin 
Request Type : PUT
Path : /edit/:task id

require : {
    Fields which you wanna edit .
    This Method is overwrite .
}

response : {
    status code : 200 or 500
    message : edited
    detail {
           edit status
    }
}
------------------------------------------------------------------
Method : Edit Task
Permission : Admin 
Request Type : PUT
Path : /edit/:task id

require : {
    Fields which you wanna edit .
    This Method is overwrite .
}

response : {
    status code : 200 or 500
    message : create
    detail {
           edit status
    }
}
------------------------------------------------------------------
Method : Delete Task
Permission : Admin 
Request Type : Delete
Path : /edit/:task id

require : {
    None
}

response : {
    status code : 200 or 500
    message : clear task in all Exercises
    detail {
           delete status
    }
}
------------------------------------------------------------------
Result Section : /api/result
------------------------------------------------------------------
Method : Create or Update Result
Permission : User 
Request Type : POST
Path : /create 

require {
    exercisename : String 
    taskname : String,
    username : String,
    distribution : String (name)
    data : [Number]
}

response {
    status code 200 or 500
    message : created or update result
    detail {
        _id : String,
        exercisename : String,
        taskname : String,
        username : String,
        data : [Number]
        summary : {
            mode,cumulative, mean, median, variance, sd
        }

    }
}
------------------------------------------------------------------
Method : Search by query
Permission : Admin 
Request Type : GET
Path : /search

require params {
    exercisename/ taskname/ username
}
response {
    status code 200 or 500
    message : Find Task By Query
    detail {
        _id : String,
        exercisename : String,
        taskname : String,
        username : String,
        data : [Number]
        summary : {
            mode,cumulative, mean, median, variance, sd
        },
        exercisedetail : {Object Task}
        taskdetail : {Object Task}
        userdetail : {Object Task}
        
        
    }
}
------------------------------------------------------------------
Method : Find By taskid
Permission : Admin 
Request Type : GET
Path : /:taskid

response {
    status code 200 or 500
    message : Find Task By taskid
    detail {
        _id : String,
        exercisename : String,
        taskname : String,
        username : String,
        data : [Number]
        summary : {
            mode,cumulative, mean, median, variance, sd
        },
        exercisedetail : {Object Task}
        taskdetail : {Object Task}
        userdetail : {Object Task}
    },
}
------------------------------------------------------------------
Method : FindOne By resultid
Permission : Admin 
Request Type : GET
Path : /findone/:resultid

response {
    status code 200 or 500
    message : Find Task By resultid
    detail {
        _id : String,
        exercisename : String,
        taskname : String,
        username : String,
        data : [Number]
        summary : {
            mode,cumulative, mean, median, variance, sd
        },
        exercisedetail : {Object Task}
        taskdetail : {Object Task}
        userdetail : {Object Task}
    },
}
------------------------------------------------------------------
Method : Delete by Resultid
Permission : Admin 
Request Type : DELETE
Path : /:resultid

response {
    status code 200 or 500
    message : Delete Result
    detail {
        delmessage
    },
}